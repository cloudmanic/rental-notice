# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/

name: Fly Deploy
on:
  push:
    branches:
      - main
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, mbstring, pdo
          coverage: none
      
      - name: Install pdfcpu
        run: |
          wget https://github.com/pdfcpu/pdfcpu/releases/download/v0.11.0/pdfcpu_0.11.0_Linux_x86_64.tar.xz
          tar -xJf pdfcpu_0.11.0_Linux_x86_64.tar.xz
          sudo mv pdfcpu_0.11.0_Linux_x86_64/pdfcpu /usr/local/bin/pdfcpu
          sudo chmod +x /usr/local/bin/pdfcpu
          pdfcpu version
      
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      
      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install NPM dependencies
        run: npm ci
      
      - name: Build frontend assets
        run: npm run build
      
      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate
      
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      
      - name: Run migrations and seed test data
        run: |
          php artisan migrate --force
          php artisan db:seed --class=NoticeTypeSeeder --force
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
      
      - name: Run Tests
        run: php artisan test
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          PDF_PASSWORD: test_password_123

  deploy:
    name: Deploy app
    needs: test # This ensures deploy only runs if tests pass
    runs-on: ubuntu-latest
    environment: Production
    concurrency: deploy-group # optional: ensure only one action runs at a time
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup SSH key
        run: |
          mkdir -p .fly/ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > .fly/ssh/id_ed25519
          chmod 600 .fly/ssh/id_ed25519
      
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
